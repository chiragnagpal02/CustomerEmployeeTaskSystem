# Generated by Django 4.0.5 on 2022-07-05 07:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('company', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('parent', models.CharField(max_length=100, null=True)),
                ('addressibility', models.CharField(choices=[('Addressable', 'Addressable'), ('Unaddressable', 'Unaddressable'), ('Not-Applicable', 'Not-Applicable')], max_length=20)),
                ('addressibility_calc', models.CharField(choices=[('Addressable', 'Addressable'), ('Unaddressable', 'Unaddressable'), ('Not-Applicable', 'Not-Applicable')], max_length=20)),
                ('served_unserved', models.CharField(choices=[('Served', 'Served'), ('Unserved', 'Unserved')], max_length=20)),
                ('BU', models.CharField(choices=[('ISV', 'ISV'), ('GSV', 'GSV')], max_length=30)),
                ('unit', models.CharField(max_length=100, null=True)),
                ('business_vertical', models.CharField(max_length=200, null=True)),
                ('fleet_categorization', models.CharField(choices=[('ISV-In UDI-Not in SFDC', 'ISV-In UDI-Not in SFDC'), ('ISV-In SFDC-In UDI-Retain', 'Unaddressable'), ('GSV-Matching with SFDC', 'GSV-Matching with SFDC'), ('GSV-Not in SFDCs', 'GSV-Not in SFDCs'), ('GSV-Not in UDI', 'GSV-Not in UDI')], max_length=400)),
                ('ISV_fleet_BU_Input', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.IntegerField()),
                ('employee_name', models.CharField(max_length=200, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.IntegerField()),
                ('task_name', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('target_definition', models.CharField(max_length=500, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=100)),
                ('business_unit', models.CharField(max_length=200)),
                ('sales_head_name', models.CharField(max_length=200)),
                ('alloted_tasks', models.CharField(choices=[('Turbine Maintanance', 'Turbine Maintanance'), ('Machine Review', 'Machine Review'), ('Budget Plan', 'Budget Plan')], max_length=100)),
                ('kpi', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessPotential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('potential', models.IntegerField(null=True)),
                ('year', models.IntegerField(null=True)),
                ('addresable_market_INR', models.IntegerField(null=True)),
                ('served_market_INR', models.IntegerField(null=True)),
                ('OEM_oOEM', models.IntegerField(choices=[('OEM', 'OEM'), ('oOEM', 'oOEM')], null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Invent.customer')),
            ],
        ),
        migrations.CreateModel(
            name='AllotTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_str', models.CharField(max_length=20, null=True)),
                ('company', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Invent.customer')),
                ('employee_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Invent.employee')),
                ('task_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Invent.task')),
            ],
        ),
    ]
